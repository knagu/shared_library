<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>artifactName</name>
          <description></description>
          <defaultValue>example-repo-local/snowball_installer.zip</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>artifactServerUrl</name>
          <description></description>
          <defaultValue>http://3.92.63.54:8081/artifactory</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>credentialsId</name>
          <description></description>
          <defaultValue>artifactory-credentials</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>targetLocation</name>
          <description></description>
          <defaultValue>/var/lib/jenkins/workspace/test-deploy/</defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.76">
    <script>node{
def pwd=pwd()
print(pwd)
stage(&apos;Download Artifacts&apos;) {
cleanWs()
def artifactory = Artifactory.newServer url: &apos;http://3.92.63.54:8081/artifactory&apos;, credentialsId: &apos;artifactory-credentials&apos;
downloadSpec =
&quot;&quot;&quot;{
&quot;files&quot;: [
{&quot;pattern&quot;: &quot;example-repo-local/snowball_installer.zip&quot;,
&quot;target&quot;: &quot;&quot;
}]}
&quot;&quot;&quot;
// download from Artifactory.
artifactory.download downloadSpec
}
stage(&apos;Deployment&apos;) {
sh &apos;pwd&apos;
sh &apos;ls -ltr&apos;
echo &apos;validating Java is installed or not&apos;
sh label: &apos;&apos;, script: &apos;&apos;&apos;if java -version 2&gt;&amp;1 &gt;/dev/null | egrep &quot;\nS+\ns+version&quot;;then
echo &quot;Java installed.&quot;
else
echo &quot;Java NOT installed!&quot;
sleep 5
echo &quot;installing Java&quot;
sudo  apt-get install default-jdk -y
sleep 5
java -version
echo &quot;Java installed&quot;
fi&apos;&apos;&apos;
sh &apos;cd /home/devops/deploy_jarfile &amp;&amp; sudo  rm -rf /home/devops/deploy_jarfile/* &amp;&amp; pwd &amp;&amp; ls -ltr&apos;
//sh &apos;cp /var/lib/jenkins/workspace/test-demo/snowball_installer.zip /home/devops/deploy_jarfile/ &amp;&amp; ls -ltr&apos;
sh &quot;cp $pwd/snowball_installer.zip /home/devops/deploy_jarfile/ &amp;&amp; ls -ltr&quot;
sh &apos;cd /home/devops/deploy_jarfile/  &amp;&amp; unzip *.zip  &amp;&amp; ls -ltr &amp;&amp; rm -rf *.zip  &amp;&amp; cd java_artifact &amp;&amp; ls -ltr &apos;
sh &apos;cd /home/devops/deploy_jarfile/java_artifact/ &amp;&amp; nohup java -jar *.jar &amp;&apos;
stage(&apos;Notifications&apos;){
String status=&apos;&apos;    
String msg = &quot;Status: ${status}\n JOB URL: ${JOB_URL}${BUILD_NUMBER}&quot;
office365ConnectorSend message: msg, status: status, webhookUrl: &apos;https://outlook.office.com/webhook/ab5a92ea-ae03-42dd-9f87-2d1d86048d29@76a2ae5a-9f00-4f6b-95ed-5d33d77c4d61/JenkinsCI/1e829e7444d64c8b9a8f3d7dd9d89497/da11b87b-2856-4a25-afc9-4d2bcc12feba&apos;
}
}
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>